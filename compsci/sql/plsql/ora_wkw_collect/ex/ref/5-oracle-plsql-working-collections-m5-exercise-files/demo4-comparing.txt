DECLARE
  TYPE items_nt IS TABLE of VARCHAR2(60);
  l_first_nt       items_nt  := items_nt('Bike','Bike', 'Treadmill','Treadmill', 'Elliptical', 'Elliptical');
  l_second_nt      items_nt  := items_nt('Elliptical', 'Elliptical');
BEGIN
   IF l_first_nt !=  l_second_nt THEN
     DBMS_OUTPUT.PUT_LINE('Not Equal');
   END IF;
END;
/
DECLARE
  TYPE items_nt IS TABLE of VARCHAR2(60);
  l_first_nt       items_nt  := items_nt('Bike','Bike', 'Treadmill','Treadmill', 'Elliptical', 'Elliptical');
  l_second_nt      items_nt  := items_nt('Elliptical', 'Elliptical');
BEGIN
   IF l_first_nt IS NOT A SET THEN
     DBMS_OUTPUT.PUT_LINE('Not a set');
   END IF;
END;
/
DECLARE
  TYPE items_nt IS TABLE of VARCHAR2(60);
  l_first_nt       items_nt  := items_nt('Bike','Bike', 'Treadmill','Treadmill', 'Elliptical', 'Elliptical');
  l_second_nt      items_nt  := items_nt('Elliptical', 'Elliptical');
BEGIN
   IF l_first_nt IS NOT EMPTY THEN
     DBMS_OUTPUT.PUT_LINE('Not empty');
   END IF;
END;
/

DECLARE
  TYPE items_nt IS TABLE of VARCHAR2(60);
  l_first_nt       items_nt  := items_nt('Bike','Bike', 'Treadmill','Treadmill', 'Elliptical', 'Elliptical');
  l_second_nt      items_nt  := items_nt('Elliptical', 'Elliptical');
BEGIN
   IF 'Bike' MEMBER OF l_first_nt  THEN
     DBMS_OUTPUT.PUT_LINE('Is a member');
   END IF;
END;
/
DECLARE
  TYPE items_nt IS TABLE of VARCHAR2(60);
  l_first_nt       items_nt  := items_nt('Bike','Bike', 'Treadmill','Treadmill', 'Elliptical', 'Elliptical');
  l_second_nt      items_nt  := items_nt('Elliptical', 'Elliptical');
BEGIN
   IF l_second_nt SUBMULTISET OF l_first_nt  THEN
     DBMS_OUTPUT.PUT_LINE('Is submultiset');
   END IF;
END;
/
DECLARE
  TYPE items_nt IS TABLE of VARCHAR2(60);
  l_first_nt       items_nt  := items_nt('Bike','Bike', 'Treadmill','Treadmill', 'Elliptical', 'Elliptical');
  l_second_nt      items_nt  := items_nt('Elliptical', 'Elliptical');
BEGIN
     DBMS_OUTPUT.PUT_LINE('Cardinality of l_first_nt '||CARDINALITY(l_first_nt));
END;
/
SELECT * FROM item_orders;
DECLARE
  l_store1_items            items_nt;
  CURSOR cur_get_items IS
   SELECT store1_items
   FROM item_orders
    WHERE CARDINALITY(store1_items) > 2;
   l_items_nt items_nt := items_nt('Bike');
BEGIN
   OPEN cur_get_items;
    FETCH cur_get_items INTO l_store1_items ;
   CLOSE cur_get_items;
      FOR i IN l_store1_items .FIRST..l_store1_items .LAST LOOP
     DBMS_OUTPUT.PUT_LINE(l_store1_items (i));
   END LOOP;
   DBMS_OUTPUT.PUT_LINE('Cardinality '||CARDINALITY(l_store1_items ));
   IF l_store1_items IS NOT A SET THEN
     DBMS_OUTPUT.PUT_LINE('l_store1_items is not a set');
   END IF;
   IF l_items_nt SUBMULTISET OF l_store1_items THEN
     DBMS_OUTPUT.PUT_LINE('l_items_nt  is a submultiset of l_store1_items');
   END IF;
END;
/
